name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - staging
  pull_request:
    branches: ["*"]

jobs:
  testes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de código
        uses: actions/checkout@v3

      - name: Configuração do JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Permissão de Executável ao Maven
        run: chmod +x ./mvnw

      - name: Executar Testes e Build
        run: ./mvnw clean verify

  build-and-push-develop:
    needs: testes
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de código
        uses: actions/checkout@v3

      - name: Login no ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/orbitechz/npvet-backend-cloud:develop

  build-and-push-main:
    needs: testes
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de código
        uses: actions/checkout@v3

      - name: Login no ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/orbitechz/npvet-backend-cloud:latest

  build-and-push-staging:
    needs: testes
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout de código
        uses: actions/checkout@v3

      - name: Login no ghcr
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/orbitechz/npvet-backend-cloud:staging

  deploy-main:
    needs: build-and-push-main
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Autenticar com Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configurar o SDK do Google Cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: "beta"

      - name: Deploy no Cloud Run
        run: |
          gcloud run deploy npvet-backend \
            --image ghcr.io/orbitechz/npvet-backend-cloud:latest \
            --region us-central1 \
            --platform managed

  deploy-staging:
    needs: build-and-push-staging
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
      - name: Autenticar com Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configurar o SDK do Google Cloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: "beta"

      - name: Deploy no Cloud Run
        run: |
          gcloud run deploy npvet-backend \
            --image ghcr.io/orbitechz/npvet-backend-cloud:staging \
            --region us-central1 \
            --platform managed
